import {
  require_classnames
} from "./chunk-IY3EHZDD.js";
import {
  area_default,
  ascending_default,
  descending_default,
  diverging_default,
  expand_default,
  insideOut_default,
  line_default,
  none_default,
  none_default2,
  reverse_default,
  silhouette_default,
  wiggle_default
} from "./chunk-X5NGKGH7.js";
import {
  require_prop_types
} from "./chunk-IFLIF665.js";
import {
  require_react
} from "./chunk-2UC5YKPU.js";
import {
  __toESM
} from "./chunk-UXIASGQL.js";

// node_modules/@visx/shape/esm/shapes/Area.js
var import_react = __toESM(require_react());
var import_classnames = __toESM(require_classnames());

// node_modules/@visx/shape/esm/util/setNumberOrNumberAccessor.js
function setNumberOrNumberAccessor(func, value) {
  if (typeof value === "number")
    func(value);
  else
    func(value);
}

// node_modules/@visx/shape/esm/util/stackOrder.js
var STACK_ORDERS = {
  ascending: ascending_default,
  descending: descending_default,
  insideout: insideOut_default,
  none: none_default2,
  reverse: reverse_default
};
var STACK_ORDER_NAMES = Object.keys(STACK_ORDERS);

// node_modules/@visx/shape/esm/util/stackOffset.js
var STACK_OFFSETS = {
  expand: expand_default,
  diverging: diverging_default,
  none: none_default,
  silhouette: silhouette_default,
  wiggle: wiggle_default
};
var STACK_OFFSET_NAMES = Object.keys(STACK_OFFSETS);

// node_modules/@visx/shape/esm/util/D3ShapeFactories.js
function area(_temp2) {
  var _ref2 = _temp2 === void 0 ? {} : _temp2, x = _ref2.x, x0 = _ref2.x0, x1 = _ref2.x1, y = _ref2.y, y0 = _ref2.y0, y1 = _ref2.y1, defined = _ref2.defined, curve = _ref2.curve;
  var path = area_default();
  if (x)
    setNumberOrNumberAccessor(path.x, x);
  if (x0)
    setNumberOrNumberAccessor(path.x0, x0);
  if (x1)
    setNumberOrNumberAccessor(path.x1, x1);
  if (y)
    setNumberOrNumberAccessor(path.y, y);
  if (y0)
    setNumberOrNumberAccessor(path.y0, y0);
  if (y1)
    setNumberOrNumberAccessor(path.y1, y1);
  if (defined)
    path.defined(defined);
  if (curve)
    path.curve(curve);
  return path;
}
function line(_temp3) {
  var _ref3 = _temp3 === void 0 ? {} : _temp3, x = _ref3.x, y = _ref3.y, defined = _ref3.defined, curve = _ref3.curve;
  var path = line_default();
  if (x)
    setNumberOrNumberAccessor(path.x, x);
  if (y)
    setNumberOrNumberAccessor(path.y, y);
  if (defined)
    path.defined(defined);
  if (curve)
    path.curve(curve);
  return path;
}

// node_modules/@visx/shape/esm/shapes/Area.js
var _excluded = ["children", "x", "x0", "x1", "y", "y0", "y1", "data", "defined", "className", "curve", "innerRef"];
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Area(_ref) {
  var children = _ref.children, x = _ref.x, x0 = _ref.x0, x1 = _ref.x1, y = _ref.y, y0 = _ref.y0, y1 = _ref.y1, _ref$data = _ref.data, data = _ref$data === void 0 ? [] : _ref$data, _ref$defined = _ref.defined, defined = _ref$defined === void 0 ? function() {
    return true;
  } : _ref$defined, className = _ref.className, curve = _ref.curve, innerRef = _ref.innerRef, restProps = _objectWithoutPropertiesLoose(_ref, _excluded);
  var path = area({
    x,
    x0,
    x1,
    y,
    y0,
    y1,
    defined,
    curve
  });
  if (children)
    return import_react.default.createElement(import_react.default.Fragment, null, children({
      path
    }));
  return import_react.default.createElement("path", _extends({
    ref: innerRef,
    className: (0, import_classnames.default)("visx-area", className),
    d: path(data) || ""
  }, restProps));
}

// node_modules/@visx/shape/esm/shapes/Arc.js
var import_react2 = __toESM(require_react());
var import_classnames2 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/Pie.js
var import_react3 = __toESM(require_react());
var import_classnames3 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/Line.js
var import_react4 = __toESM(require_react());
var import_classnames4 = __toESM(require_classnames());
var _excluded2 = ["from", "to", "fill", "className", "innerRef"];
function _extends2() {
  _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Line(_ref) {
  var _ref$from = _ref.from, from = _ref$from === void 0 ? {
    x: 0,
    y: 0
  } : _ref$from, _ref$to = _ref.to, to = _ref$to === void 0 ? {
    x: 1,
    y: 1
  } : _ref$to, _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "transparent" : _ref$fill, className = _ref.className, innerRef = _ref.innerRef, restProps = _objectWithoutPropertiesLoose2(_ref, _excluded2);
  var isRectilinear = from.x === to.x || from.y === to.y;
  return import_react4.default.createElement("line", _extends2({
    ref: innerRef,
    className: (0, import_classnames4.default)("visx-line", className),
    x1: from.x,
    y1: from.y,
    x2: to.x,
    y2: to.y,
    fill,
    shapeRendering: isRectilinear ? "crispEdges" : "auto"
  }, restProps));
}

// node_modules/@visx/shape/esm/shapes/LinePath.js
var import_react5 = __toESM(require_react());
var import_classnames5 = __toESM(require_classnames());
var _excluded3 = ["children", "data", "x", "y", "fill", "className", "curve", "innerRef", "defined"];
function _extends3() {
  _extends3 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function LinePath(_ref) {
  var children = _ref.children, _ref$data = _ref.data, data = _ref$data === void 0 ? [] : _ref$data, x = _ref.x, y = _ref.y, _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "transparent" : _ref$fill, className = _ref.className, curve = _ref.curve, innerRef = _ref.innerRef, _ref$defined = _ref.defined, defined = _ref$defined === void 0 ? function() {
    return true;
  } : _ref$defined, restProps = _objectWithoutPropertiesLoose3(_ref, _excluded3);
  var path = line({
    x,
    y,
    defined,
    curve
  });
  if (children)
    return import_react5.default.createElement(import_react5.default.Fragment, null, children({
      path
    }));
  return import_react5.default.createElement("path", _extends3({
    ref: innerRef,
    className: (0, import_classnames5.default)("visx-linepath", className),
    d: path(data) || "",
    fill,
    strokeLinecap: "round"
  }, restProps));
}

// node_modules/@visx/shape/esm/shapes/LineRadial.js
var import_react6 = __toESM(require_react());
var import_classnames6 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/AreaClosed.js
var import_react7 = __toESM(require_react());
var import_classnames7 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/AreaStack.js
var import_react9 = __toESM(require_react());
var import_classnames9 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/Stack.js
var import_react8 = __toESM(require_react());
var import_classnames8 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/Bar.js
var import_react10 = __toESM(require_react());
var import_classnames10 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/BarRounded.js
var import_react11 = __toESM(require_react());
var import_classnames11 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/BarGroup.js
var import_react12 = __toESM(require_react());
var import_classnames12 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/BarGroupHorizontal.js
var import_react13 = __toESM(require_react());
var import_classnames13 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/BarStack.js
var import_react14 = __toESM(require_react());
var import_classnames14 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/BarStackHorizontal.js
var import_react15 = __toESM(require_react());
var import_classnames15 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/link/diagonal/LinkHorizontal.js
var import_react16 = __toESM(require_react());
var import_classnames16 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/link/diagonal/LinkVertical.js
var import_react17 = __toESM(require_react());
var import_classnames17 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/link/diagonal/LinkRadial.js
var import_react18 = __toESM(require_react());
var import_classnames18 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/link/curve/LinkHorizontalCurve.js
var import_react19 = __toESM(require_react());
var import_classnames19 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/link/curve/LinkVerticalCurve.js
var import_react20 = __toESM(require_react());
var import_classnames20 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/link/curve/LinkRadialCurve.js
var import_react21 = __toESM(require_react());
var import_classnames21 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/link/line/LinkHorizontalLine.js
var import_react22 = __toESM(require_react());
var import_classnames22 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/link/line/LinkVerticalLine.js
var import_react23 = __toESM(require_react());
var import_classnames23 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/link/line/LinkRadialLine.js
var import_react24 = __toESM(require_react());
var import_classnames24 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/link/step/LinkHorizontalStep.js
var import_react25 = __toESM(require_react());
var import_classnames25 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/link/step/LinkVerticalStep.js
var import_react26 = __toESM(require_react());
var import_classnames26 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/link/step/LinkRadialStep.js
var import_react27 = __toESM(require_react());
var import_classnames27 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/Polygon.js
var import_react28 = __toESM(require_react());
var import_classnames28 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/Circle.js
var import_react29 = __toESM(require_react());
var import_classnames29 = __toESM(require_classnames());

// node_modules/@visx/shape/esm/shapes/SplitLinePath.js
var import_prop_types = __toESM(require_prop_types());
var import_react30 = __toESM(require_react());

// node_modules/@visx/shape/esm/util/getOrCreateMeasurementElement.js
var SVG_NAMESPACE_URL = "http://www.w3.org/2000/svg";
function getOrCreateMeasurementElement(elementId) {
  var pathElement = document.getElementById(elementId);
  if (!pathElement) {
    var svg = document.createElementNS(SVG_NAMESPACE_URL, "svg");
    svg.setAttribute("aria-hidden", "true");
    svg.style.opacity = "0";
    svg.style.width = "0";
    svg.style.height = "0";
    svg.style.position = "absolute";
    svg.style.top = "-100%";
    svg.style.left = "-100%";
    svg.style.pointerEvents = "none";
    pathElement = document.createElementNS(SVG_NAMESPACE_URL, "path");
    pathElement.setAttribute("id", elementId);
    svg.appendChild(pathElement);
    document.body.appendChild(svg);
  }
  return pathElement;
}

// node_modules/@visx/shape/esm/util/getSplitLineSegments.js
var MEASUREMENT_ELEMENT_ID = "__visx_splitpath_svg_path_measurement_id";
var TRUE = function TRUE2() {
  return true;
};
function getSplitLineSegments(_ref) {
  var path = _ref.path, pointsInSegments = _ref.pointsInSegments, _ref$segmentation = _ref.segmentation, segmentation = _ref$segmentation === void 0 ? "x" : _ref$segmentation, _ref$sampleRate = _ref.sampleRate, sampleRate = _ref$sampleRate === void 0 ? 1 : _ref$sampleRate;
  try {
    var pathElement = getOrCreateMeasurementElement(MEASUREMENT_ELEMENT_ID);
    pathElement.setAttribute("d", path);
    var totalLength = pathElement.getTotalLength();
    var numSegments = pointsInSegments.length;
    var lineSegments = pointsInSegments.map(function() {
      return [];
    });
    if (segmentation === "x" || segmentation === "y") {
      var segmentStarts = pointsInSegments.map(function(points) {
        var _points$find;
        return (_points$find = points.find(function(p) {
          return typeof p[segmentation] === "number";
        })) == null ? void 0 : _points$find[segmentation];
      });
      var first = pathElement.getPointAtLength(0);
      var last = pathElement.getPointAtLength(totalLength);
      var isIncreasing = last[segmentation] > first[segmentation];
      var isBeyondSegmentStart = isIncreasing ? segmentStarts.map(function(start) {
        return typeof start === "undefined" ? TRUE : function(xOrY) {
          return xOrY >= start;
        };
      }) : segmentStarts.map(function(start) {
        return typeof start === "undefined" ? TRUE : function(xOrY) {
          return xOrY <= start;
        };
      });
      var currentSegment = 0;
      for (var distance = 0; distance <= totalLength; distance += sampleRate) {
        var sample = pathElement.getPointAtLength(distance);
        var position = sample[segmentation];
        while (currentSegment < numSegments - 1 && isBeyondSegmentStart[currentSegment + 1](position)) {
          currentSegment += 1;
        }
        lineSegments[currentSegment].push(sample);
      }
    } else {
      var numPointsInSegment = pointsInSegments.map(function(points) {
        return points.length;
      });
      var numPoints = numPointsInSegment.reduce(function(sum, curr) {
        return sum + curr;
      }, 0);
      var lengthBetweenPoints = totalLength / Math.max(1, numPoints - 1);
      var _segmentStarts = numPointsInSegment.slice(0, numSegments - 1);
      _segmentStarts.unshift(0);
      for (var i = 2; i < numSegments; i += 1) {
        _segmentStarts[i] += _segmentStarts[i - 1];
      }
      for (var _i = 0; _i < numSegments; _i += 1) {
        _segmentStarts[_i] *= lengthBetweenPoints;
      }
      var _currentSegment = 0;
      for (var _distance = 0; _distance <= totalLength; _distance += sampleRate) {
        var _sample = pathElement.getPointAtLength(_distance);
        while (_currentSegment < numSegments - 1 && _distance >= _segmentStarts[_currentSegment + 1]) {
          _currentSegment += 1;
        }
        lineSegments[_currentSegment].push(_sample);
      }
    }
    return lineSegments;
  } catch (e) {
    return [];
  }
}

// node_modules/@visx/shape/esm/shapes/SplitLinePath.js
function _extends4() {
  _extends4 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends4.apply(this, arguments);
}
var getX2 = function getX3(d) {
  return d.x || 0;
};
var getY2 = function getY3(d) {
  return d.y || 0;
};
function SplitLinePath(_ref) {
  var children = _ref.children, className = _ref.className, curve = _ref.curve, defined = _ref.defined, segmentation = _ref.segmentation, sampleRate = _ref.sampleRate, segments = _ref.segments, x = _ref.x, y = _ref.y, styles = _ref.styles;
  var pointsInSegments = (0, import_react30.useMemo)(function() {
    var xFn = typeof x === "number" || typeof x === "undefined" ? function() {
      return x;
    } : x;
    var yFn = typeof y === "number" || typeof y === "undefined" ? function() {
      return y;
    } : y;
    return segments.map(function(s) {
      return s.map(function(value, i) {
        return {
          x: xFn(value, i, s),
          y: yFn(value, i, s)
        };
      });
    });
  }, [x, y, segments]);
  var pathString = (0, import_react30.useMemo)(function() {
    var path = line({
      x,
      y,
      defined,
      curve
    });
    return path(segments.flat()) || "";
  }, [x, y, defined, curve, segments]);
  var splitLineSegments = (0, import_react30.useMemo)(function() {
    return getSplitLineSegments({
      path: pathString,
      segmentation,
      pointsInSegments,
      sampleRate
    });
  }, [pathString, segmentation, pointsInSegments, sampleRate]);
  return import_react30.default.createElement("g", null, splitLineSegments.map(function(segment, index) {
    return children ? import_react30.default.createElement(import_react30.default.Fragment, {
      key: index
    }, children({
      index,
      segment,
      styles: styles[index] || styles[index % styles.length]
    })) : import_react30.default.createElement(LinePath, _extends4({
      key: index,
      className,
      data: segment,
      x: getX2,
      y: getY2
    }, styles[index] || styles[index % styles.length]));
  }));
}
SplitLinePath.propTypes = {
  segments: import_prop_types.default.arrayOf(import_prop_types.default.array).isRequired,
  styles: import_prop_types.default.array.isRequired,
  children: import_prop_types.default.func,
  className: import_prop_types.default.string
};

export {
  Line,
  Area
};
//# sourceMappingURL=chunk-PIN2J46Y.js.map
